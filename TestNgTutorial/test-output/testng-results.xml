<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="135" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
    <groups>
      <group name="Smoke">
        <method signature="Day3.day3mngdemo()[pri:0, instance:test1.Day3@2f943d71]" name="day3mngdemo" class="test1.Day3"/>
        <method signature="Day1.day1mngdemo()[pri:0, instance:test1.Day1@30a3107a]" name="day1mngdemo" class="test1.Day1"/>
        <method signature="Day2.day2mngdemo(java.lang.String)[pri:0, instance:test1.Day2@3043fe0e]" name="day2mngdemo" class="test1.Day2"/>
        <method signature="Day4.day4mngdemo()[pri:0, instance:test1.Day4@5bfbf16f]" name="day4mngdemo" class="test1.Day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Regression" duration-ms="74" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
      <class name="test1.Day3">
        <test-method status="PASS" signature="day3mngdemo()[pri:0, instance:test1.Day3@2f943d71]" name="day3mngdemo" duration-ms="2" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3mngdemo -->
        <test-method status="PASS" signature="day3evngdemo(java.lang.String,java.lang.String)[pri:0, instance:test1.Day3@2f943d71]" name="day3evngdemo" duration-ms="1" started-at="2021-08-18T16:48:40 IST" data-provider="getData" depends-on-methods="test1.Day3.day3mngdemo" finished-at="2021-08-18T16:48:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusernamne]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3evngdemo -->
        <test-method status="PASS" signature="day3evngdemo(java.lang.String,java.lang.String)[pri:0, instance:test1.Day3@2f943d71]" name="day3evngdemo" duration-ms="1" started-at="2021-08-18T16:48:40 IST" data-provider="getData" depends-on-methods="test1.Day3.day3mngdemo" finished-at="2021-08-18T16:48:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3evngdemo -->
        <test-method status="PASS" signature="day3evngdemo(java.lang.String,java.lang.String)[pri:0, instance:test1.Day3@2f943d71]" name="day3evngdemo" duration-ms="2" started-at="2021-08-18T16:48:40 IST" data-provider="getData" depends-on-methods="test1.Day3.day3mngdemo" finished-at="2021-08-18T16:48:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day3evngdemo -->
      </class> <!-- test1.Day3 -->
      <class name="test1.Day2">
        <test-method status="PASS" signature="day2evngdemo()[pri:0, instance:test1.Day2@3043fe0e]" name="day2evngdemo" duration-ms="2" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day2evngdemo -->
        <test-method status="PASS" signature="day2mngdemo(java.lang.String)[pri:0, instance:test1.Day2@3043fe0e]" name="day2mngdemo" duration-ms="2" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day2mngdemo -->
      </class> <!-- test1.Day2 -->
      <class name="test1.Day1">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test1.Day1@30a3107a]" name="beforeTest" is-config="true" duration-ms="0" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test1.Day1@30a3107a]" name="beforeClass" is-config="true" duration-ms="1" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test1.Day1@30a3107a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="day1mngdemo()[pri:0, instance:test1.Day1@30a3107a]" name="day1mngdemo" duration-ms="9" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test1.Day1.day1mngdemo(Day1.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day1mngdemo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test1.Day1@30a3107a]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test1.Day1@30a3107a]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test1.Day1@30a3107a]" name="afterTest" is-config="true" duration-ms="1" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test1.Day1 -->
    </test> <!-- Regression -->
    <test name="Car Loan" duration-ms="7" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
      <class name="test1.Day4">
        <test-method status="PASS" signature="day4evngdemo(java.lang.String)[pri:0, instance:test1.Day4@5bfbf16f]" name="day4evngdemo" duration-ms="1" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Cars24.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day4evngdemo -->
        <test-method status="PASS" signature="day4mngdemo()[pri:0, instance:test1.Day4@5bfbf16f]" name="day4mngdemo" duration-ms="2" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- day4mngdemo -->
      </class> <!-- test1.Day4 -->
      <class name="test1.Day1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test1.Day1@30a3107a]" name="beforeSuite" is-config="true" duration-ms="8" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test1.Day1@30a3107a]" name="afterSuite" is-config="true" duration-ms="1" started-at="2021-08-18T16:48:40 IST" finished-at="2021-08-18T16:48:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test1.Day1 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Suite -->
</testng-results>
