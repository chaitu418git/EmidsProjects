package stepDefinitions;


import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;

import io.cucumber.java.en.*;
import pageObjects.AddCustomer;
import pageObjects.LoginPage;

public class Steps {
	public LoginPage lp;
	public WebDriver driver;
	public AddCustomer addCust;
	
	@Given("User Launch Chrome browser")
	public void user_launch_chrome_browser() {
		System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"//Drivers/chromedriver.exe");
		driver=new ChromeDriver();
		driver.manage().window().maximize();
		lp=new LoginPage(driver);
		
	}

	@And("user opens URL {string}")
	public void user_opens_url(String url) {
	    driver.get(url);
	}

	@And("user enters Email as {string} and password as {string}")
	public void user_enters_email_as_and_password_as(String uname, String pswd) {
	    lp.setUsername(uname);
	    lp.setPassword(pswd);
	}

	@When("user click on Login")
	public void user_click_on_login() {
	    lp.clickLogin();
	}

	@Then("page title should be {string}")
	public void page_title_should_be(String expectedtitle) {
		if(driver.getPageSource().contains("Login was unsuccessful"))
		{
			System.out.println(lp.errorMessage());
			driver.close();
			Assert.assertTrue(false);
		}
		else {
	 Assert.assertEquals(driver.getTitle(), expectedtitle);
		}
	}

	@When("user click on Logout link")
	public void user_click_on_logout_link() {
	    lp.clickLogout();
	}

	@Then("close browser")
	public void close_browser() {
	    driver.close();
	}
	
	//Add Customer
	@Then("user can view Dashboard")
	public void user_can_view_dashboard() {
		Assert.assertEquals(addCust.getTitle(),"Dashboard / nopCommerce administration");
	}

	@When("user click on Customers Menu")
	public void user_click_on_customers_menu() {
	    addCust.clickCustomeMenuLink();
	}

	@When("click on customers Menu Item")
	public void click_on_customers_menu_item() {
	    addCust.clickCustomeMenuItem();
	}

	@When("user landed on Customers Page")
	public void user_landed_on_customers_page() {
		Assert.assertEquals(addCust.getTitle(),	"Customers / nopCommerce administration");
	}

	@When("click on Add New Button")
	public void click_on_add_new_button() {
	    addCust.addNew();
	}

	@Then("user can view Add new customer page")
	public void user_can_view_add_new_customer_page() {
		Assert.assertEquals(addCust.getTitle(), "Add a new customer / nopCommerce administration");
	}

	@When("user enters customer info")
	public void user_enters_customer_info() throws InterruptedException {
		String email=BaseClass.randomString()+"@gmail.com";
	   addCust.setEmail(email);
	    addCust.setPassword("test123");
	    addCust.setFirstName("chaitu");
	    addCust.setLastName("test");
	    addCust.setGender("Male");
	    addCust.setDob("8/5/2021");
	    addCust.setCompanyName("Test COmpany");
	    //Registered -Default
	    //The customer cannot be in both "guests" and "registered" custom roles
	    //Add the customer to Guests or registered customer role
	    addCust.setCustomerRole("Guests");
	    addCust.setManagerOfVendor("Vendor 2");
	    addCust.setAdminComment("commnets test");
	 
	}

	@When("click on save button")
	public void click_on_save_button() {
	    addCust.clickOnSave();
	}

	@Then("user can view confirmation message as {string}")
	public void user_can_view_confirmation_message_as(String string) {
		Assert.assertTrue(driver.findElement(By.tagName("body")).
	    		getText().contains("The new customer has been added successfully"));
	}



}
